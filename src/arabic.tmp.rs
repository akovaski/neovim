use crate::*;

pub const a_HAMZA: i32 = 0x621 as i32;
pub const a_ALEF_MADDA: i32 = 0x622 as i32;
pub const a_ALEF_HAMZA_ABOVE: i32 = 0x623 as i32;
pub const a_WAW_HAMZA: i32 = 0x624 as i32;
pub const a_ALEF_HAMZA_BELOW: i32 = 0x625 as i32;
pub const a_YEH_HAMZA: i32 = 0x626 as i32;
pub const a_ALEF: i32 = 0x627 as i32;
pub const a_BEH: i32 = 0x628 as i32;
pub const a_TEH_MARBUTA: i32 = 0x629 as i32;
pub const a_TEH: i32 = 0x62a as i32;
pub const a_THEH: i32 = 0x62b as i32;
pub const a_JEEM: i32 = 0x62c as i32;
pub const a_HAH: i32 = 0x62d as i32;
pub const a_KHAH: i32 = 0x62e as i32;
pub const a_DAL: i32 = 0x62f as i32;
pub const a_THAL: i32 = 0x630 as i32;
pub const a_REH: i32 = 0x631 as i32;
pub const a_ZAIN: i32 = 0x632 as i32;
pub const a_SEEN: i32 = 0x633 as i32;
pub const a_SHEEN: i32 = 0x634 as i32;
pub const a_SAD: i32 = 0x635 as i32;
pub const a_DAD: i32 = 0x636 as i32;
pub const a_TAH: i32 = 0x637 as i32;
pub const a_ZAH: i32 = 0x638 as i32;
pub const a_AIN: i32 = 0x639 as i32;
pub const a_GHAIN: i32 = 0x63a as i32;
pub const a_TATWEEL: i32 = 0x640 as i32;
pub const a_FEH: i32 = 0x641 as i32;
pub const a_QAF: i32 = 0x642 as i32;
pub const a_KAF: i32 = 0x643 as i32;
pub const a_LAM: i32 = 0x644 as i32;
pub const a_MEEM: i32 = 0x645 as i32;
pub const a_NOON: i32 = 0x646 as i32;
pub const a_HEH: i32 = 0x647 as i32;
pub const a_WAW: i32 = 0x648 as i32;
pub const a_ALEF_MAKSURA: i32 = 0x649 as i32;
pub const a_YEH: i32 = 0x64a as i32;
pub const a_FATHATAN: i32 = 0x64b as i32;
pub const a_SUKUN: i32 = 0x652 as i32;
pub const a_HAMZA_BELOW: i32 = 0x655 as i32;
pub const a_MINI_ALEF: i32 = 0x670 as i32;
pub const a_s_FATHATAN: i32 = 0xfe70 as i32;
pub const a_s_DAMMATAN: i32 = 0xfe72 as i32;
pub const a_s_KASRATAN: i32 = 0xfe74 as i32;
pub const a_s_FATHA: i32 = 0xfe76 as i32;
pub const a_s_HAMZA: i32 = 0xfe80 as i32;
pub const a_s_ALEF_MADDA: i32 = 0xfe81 as i32;
pub const a_f_ALEF_MADDA: i32 = 0xfe82 as i32;
pub const a_s_ALEF_HAMZA_ABOVE: i32 = 0xfe83 as i32;
pub const a_f_ALEF_HAMZA_ABOVE: i32 = 0xfe84 as i32;
pub const a_s_WAW_HAMZA: i32 = 0xfe85 as i32;
pub const a_f_WAW_HAMZA: i32 = 0xfe86 as i32;
pub const a_s_ALEF_HAMZA_BELOW: i32 = 0xfe87 as i32;
pub const a_f_ALEF_HAMZA_BELOW: i32 = 0xfe88 as i32;
pub const a_s_YEH_HAMZA: i32 = 0xfe89 as i32;
pub const a_f_YEH_HAMZA: i32 = 0xfe8a as i32;
pub const a_i_YEH_HAMZA: i32 = 0xfe8b as i32;
pub const a_m_YEH_HAMZA: i32 = 0xfe8c as i32;
pub const a_s_ALEF: i32 = 0xfe8d as i32;
pub const a_f_ALEF: i32 = 0xfe8e as i32;
pub const a_s_BEH: i32 = 0xfe8f as i32;
pub const a_f_BEH: i32 = 0xfe90 as i32;
pub const a_i_BEH: i32 = 0xfe91 as i32;
pub const a_m_BEH: i32 = 0xfe92 as i32;
pub const a_s_TEH_MARBUTA: i32 = 0xfe93 as i32;
pub const a_f_TEH_MARBUTA: i32 = 0xfe94 as i32;
pub const a_s_TEH: i32 = 0xfe95 as i32;
pub const a_f_TEH: i32 = 0xfe96 as i32;
pub const a_i_TEH: i32 = 0xfe97 as i32;
pub const a_m_TEH: i32 = 0xfe98 as i32;
pub const a_s_THEH: i32 = 0xfe99 as i32;
pub const a_f_THEH: i32 = 0xfe9a as i32;
pub const a_i_THEH: i32 = 0xfe9b as i32;
pub const a_m_THEH: i32 = 0xfe9c as i32;
pub const a_s_JEEM: i32 = 0xfe9d as i32;
pub const a_f_JEEM: i32 = 0xfe9e as i32;
pub const a_i_JEEM: i32 = 0xfe9f as i32;
pub const a_m_JEEM: i32 = 0xfea0 as i32;
pub const a_s_HAH: i32 = 0xfea1 as i32;
pub const a_f_HAH: i32 = 0xfea2 as i32;
pub const a_i_HAH: i32 = 0xfea3 as i32;
pub const a_m_HAH: i32 = 0xfea4 as i32;
pub const a_s_KHAH: i32 = 0xfea5 as i32;
pub const a_f_KHAH: i32 = 0xfea6 as i32;
pub const a_i_KHAH: i32 = 0xfea7 as i32;
pub const a_m_KHAH: i32 = 0xfea8 as i32;
pub const a_s_DAL: i32 = 0xfea9 as i32;
pub const a_f_DAL: i32 = 0xfeaa as i32;
pub const a_s_THAL: i32 = 0xfeab as i32;
pub const a_f_THAL: i32 = 0xfeac as i32;
pub const a_s_REH: i32 = 0xfead as i32;
pub const a_f_REH: i32 = 0xfeae as i32;
pub const a_s_ZAIN: i32 = 0xfeaf as i32;
pub const a_f_ZAIN: i32 = 0xfeb0 as i32;
pub const a_s_SEEN: i32 = 0xfeb1 as i32;
pub const a_f_SEEN: i32 = 0xfeb2 as i32;
pub const a_i_SEEN: i32 = 0xfeb3 as i32;
pub const a_m_SEEN: i32 = 0xfeb4 as i32;
pub const a_s_SHEEN: i32 = 0xfeb5 as i32;
pub const a_f_SHEEN: i32 = 0xfeb6 as i32;
pub const a_i_SHEEN: i32 = 0xfeb7 as i32;
pub const a_m_SHEEN: i32 = 0xfeb8 as i32;
pub const a_s_SAD: i32 = 0xfeb9 as i32;
pub const a_f_SAD: i32 = 0xfeba as i32;
pub const a_i_SAD: i32 = 0xfebb as i32;
pub const a_m_SAD: i32 = 0xfebc as i32;
pub const a_s_DAD: i32 = 0xfebd as i32;
pub const a_f_DAD: i32 = 0xfebe as i32;
pub const a_i_DAD: i32 = 0xfebf as i32;
pub const a_m_DAD: i32 = 0xfec0 as i32;
pub const a_s_TAH: i32 = 0xfec1 as i32;
pub const a_f_TAH: i32 = 0xfec2 as i32;
pub const a_i_TAH: i32 = 0xfec3 as i32;
pub const a_m_TAH: i32 = 0xfec4 as i32;
pub const a_s_ZAH: i32 = 0xfec5 as i32;
pub const a_f_ZAH: i32 = 0xfec6 as i32;
pub const a_i_ZAH: i32 = 0xfec7 as i32;
pub const a_m_ZAH: i32 = 0xfec8 as i32;
pub const a_s_AIN: i32 = 0xfec9 as i32;
pub const a_f_AIN: i32 = 0xfeca as i32;
pub const a_i_AIN: i32 = 0xfecb as i32;
pub const a_m_AIN: i32 = 0xfecc as i32;
pub const a_s_GHAIN: i32 = 0xfecd as i32;
pub const a_f_GHAIN: i32 = 0xfece as i32;
pub const a_i_GHAIN: i32 = 0xfecf as i32;
pub const a_m_GHAIN: i32 = 0xfed0 as i32;
pub const a_s_FEH: i32 = 0xfed1 as i32;
pub const a_f_FEH: i32 = 0xfed2 as i32;
pub const a_i_FEH: i32 = 0xfed3 as i32;
pub const a_m_FEH: i32 = 0xfed4 as i32;
pub const a_s_QAF: i32 = 0xfed5 as i32;
pub const a_f_QAF: i32 = 0xfed6 as i32;
pub const a_i_QAF: i32 = 0xfed7 as i32;
pub const a_m_QAF: i32 = 0xfed8 as i32;
pub const a_s_KAF: i32 = 0xfed9 as i32;
pub const a_f_KAF: i32 = 0xfeda as i32;
pub const a_i_KAF: i32 = 0xfedb as i32;
pub const a_m_KAF: i32 = 0xfedc as i32;
pub const a_s_LAM: i32 = 0xfedd as i32;
pub const a_f_LAM: i32 = 0xfede as i32;
pub const a_i_LAM: i32 = 0xfedf as i32;
pub const a_m_LAM: i32 = 0xfee0 as i32;
pub const a_s_MEEM: i32 = 0xfee1 as i32;
pub const a_f_MEEM: i32 = 0xfee2 as i32;
pub const a_i_MEEM: i32 = 0xfee3 as i32;
pub const a_m_MEEM: i32 = 0xfee4 as i32;
pub const a_s_NOON: i32 = 0xfee5 as i32;
pub const a_f_NOON: i32 = 0xfee6 as i32;
pub const a_i_NOON: i32 = 0xfee7 as i32;
pub const a_m_NOON: i32 = 0xfee8 as i32;
pub const a_s_HEH: i32 = 0xfee9 as i32;
pub const a_f_HEH: i32 = 0xfeea as i32;
pub const a_i_HEH: i32 = 0xfeeb as i32;
pub const a_m_HEH: i32 = 0xfeec as i32;
pub const a_s_WAW: i32 = 0xfeed as i32;
pub const a_f_WAW: i32 = 0xfeee as i32;
pub const a_s_ALEF_MAKSURA: i32 = 0xfeef as i32;
pub const a_f_ALEF_MAKSURA: i32 = 0xfef0 as i32;
pub const a_s_YEH: i32 = 0xfef1 as i32;
pub const a_f_YEH: i32 = 0xfef2 as i32;
pub const a_i_YEH: i32 = 0xfef3 as i32;
pub const a_m_YEH: i32 = 0xfef4 as i32;
pub const a_s_LAM_ALEF_MADDA_ABOVE: i32 = 0xfef5 as i32;
pub const a_f_LAM_ALEF_MADDA_ABOVE: i32 = 0xfef6 as i32;
pub const a_s_LAM_ALEF_HAMZA_ABOVE: i32 = 0xfef7 as i32;
pub const a_f_LAM_ALEF_HAMZA_ABOVE: i32 = 0xfef8 as i32;
pub const a_s_LAM_ALEF_HAMZA_BELOW: i32 = 0xfef9 as i32;
pub const a_f_LAM_ALEF_HAMZA_BELOW: i32 = 0xfefa as i32;
pub const a_s_LAM_ALEF: i32 = 0xfefb as i32;
pub const a_f_LAM_ALEF: i32 = 0xfefc as i32;
pub const a_BYTE_ORDER_MARK: i32 = 0xfeff as i32;
extern "C" {
    pub fn arabic_shape(mut c: i32, mut ccp: *mut i32, mut c1p: *mut i32, mut prev_c: i32, mut prev_c1: i32, mut next_c: i32) -> i32;
    pub fn arabic_combine(mut one: i32, mut two: i32) -> bool;
    pub fn arabic_maycombine(mut two: i32) -> bool;
}
